{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../src/components/button/button.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Prop, Element, Event, EventEmitter, Method } from '@stencil/core';\nimport { inheritAttributes } from '../../utils/helpers';\n\n/**\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot icon-only - Should be used on an icon in a button that has no text.\n * @slot start - Content is placed to the left of the button text (will be to the right when we support right-to-left direction)\n * @slot end - Content is placed to the right of the button text (will be to the left when we support right-to-left direction)\n */\n@Component({\n  tag: 'gr-button',\n  styleUrl: 'button.scss',\n  shadow: true,\n})\nexport class Button {\n  private inheritedAttributes: { [k: string]: any } = {};\n  private button: HTMLElement;\n\n  @Element() el!: HTMLElement;\n\n  /**\n   * The different variants.\n   * The options are: `\"default\"`, `\"primary\"`, `\"secondary\"`, `\"danger\"`, and `\"plain\"`.\n   */\n  @Prop({ reflect: true }) variant?: 'default' | 'primary' | 'secondary' | 'danger' | 'plain' = 'default';\n\n  /**\n   * If `true`, the user cannot interact with the button.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Set to true to draw the button in a loading state.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * The button's size.\n   */\n  @Prop({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Set to true to draw the button with a caret for use with dropdowns, popovers, etc.\n   */\n  @Prop() caret = false;\n\n  /**\n   * Set to true to draw a pill-style button with rounded edges.\n   */\n  @Prop({ reflect: true }) pill = false;\n\n  /**\n   * Set to `\"block\"` for a full-width button or to `\"full\"` for a full-width button\n   * without left and right borders.\n   */\n  @Prop({ reflect: true }) expand?: 'full' | 'block';\n\n  /**\n   * Set to true to draw a circle button.\n   */\n  @Prop({ reflect: true }) circle = false;\n\n  /**\n   * Contains a URL or a URL fragment that the hyperlink points to.\n   */\n  @Prop() href: string | undefined;\n\n  /**\n   * Specifies where to display the linked URL.\n   * Special keywords: `\"_blank\"`, `\"_self\"`, `\"_parent\"`, `\"_top\"`.\n   */\n  @Prop() target: string | undefined;\n\n  /**\n   * Specifies the relationship of the target object to the link object.\n   * The value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).\n   */\n  @Prop() rel: string | undefined;\n\n  /**\n   * The type of the button.\n   */\n  @Prop() type: 'submit' | 'reset' | 'button' = 'button';\n\n  /**\n   * Emitted when the button has focus.\n   */\n  @Event({ eventName: 'gr-focus' }) grFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the button loses focus.\n   */\n  @Event({ eventName: 'gr-blur' }) grBlur!: EventEmitter<void>;\n\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label', 'tabindex', 'title']);\n  }\n\n  /** Sets focus on the button. */\n  @Method()\n  async setFocus(options?: FocusOptions) {\n    this.button.focus(options);\n  }\n\n  /** Removes focus from the button. */\n  @Method()\n  async removeFocus() {\n    this.button.blur();\n  }\n\n  private handleClick = (ev: MouseEvent) => {\n    if (this.type !== 'button') {\n      // this button wants to specifically submit/reset a form\n      // climb up the dom to see if we're in a <form>\n      // and if so, then use JS to submit/reset it\n      const form = this.el.closest('form');\n      if (form) {\n        ev.preventDefault();\n\n        const fakeButton = document.createElement('button');\n        fakeButton.type = this.type;\n        fakeButton.style.display = 'none';\n        form.appendChild(fakeButton);\n        fakeButton.click();\n        fakeButton.remove();\n      }\n    }\n  };\n\n  private onFocus = () => {\n    this.grFocus.emit();\n  };\n\n  private onBlur = () => {\n    this.grBlur.emit();\n  };\n\n  render() {\n    const { rel, target, href, variant, size, expand, type, inheritedAttributes, disabled } = this;\n    const TagType = href === undefined ? 'button' : ('a' as any);\n    const attrs =\n      TagType === 'button'\n        ? { type }\n        : {\n            href,\n            rel,\n            target,\n          };\n\n    return (\n      <Host\n        onClick={this.handleClick}\n        aria-disabled={disabled ? 'true' : null}\n        class={{\n          [`button-${variant}`]: true,\n          [`button-${size}`]: true,\n          [`button-${expand}`]: expand !== undefined,\n          'button-caret': this.caret,\n          'button-circle': this.circle,\n          'button-pill': this.pill,\n          'button-disabled': disabled,\n          'button-loading': this.loading,\n        }}\n      >\n        <TagType\n          ref={el => (this.button = el)}\n          {...attrs}\n          class=\"button-native\"\n          disabled={disabled}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          {...inheritedAttributes}\n        >\n          <span class=\"button-inner\">\n            <slot name=\"icon-only\"></slot>\n            <slot name=\"start\"></slot>\n            <slot></slot>\n            <slot name=\"end\"></slot>\n            {this.caret && (\n              <span class=\"caret\">\n                <svg role=\"img\" aria-hidden=\"true\" viewBox=\"0 0 512 512\">\n                  <title>Chevron Down</title>\n                  <path\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"48\"\n                    d=\"M112 184l144 144 144-144\"\n                  />\n                </svg>\n              </span>\n            )}\n          </span>\n\n          {this.loading && <gr-spinner />}\n        </TagType>\n      </Host>\n    );\n  }\n}\n"]}