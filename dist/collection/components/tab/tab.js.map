{"version":3,"file":"tab.js","sourceRoot":"","sources":["../../../src/components/tab/tab.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAgB,MAAM,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAOtG,MAAM,OAAO,GAAG;;oBAGM,KAAK;iBAGQ,EAAE;kBAEQ,KAAK;oBAGH,KAAK;;EAYlD,iBAAiB;IACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACzC,CAAC;EAED,6BAA6B;EAE7B,KAAK,CAAC,QAAQ;IACZ,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;EAClB,CAAC;EAED,kCAAkC;EAElC,KAAK,CAAC,WAAW;IACf,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;EACjB,CAAC;EAED,MAAM;IACJ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACtB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACrB,CAAC;EAED,OAAO;IACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACrB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;EACtB,CAAC;EAED,MAAM;IACJ,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;IAElC,OAAO,CACL,EAAC,IAAI,IACH,KAAK,EAAE;QACL,GAAG,EAAE,IAAI;QACT,YAAY,EAAE,MAAM;QACpB,cAAc,EAAE,QAAQ;QACxB,aAAa,EAAE,IAAI,CAAC,QAAQ;OAC7B,EACD,IAAI,EAAC,KAAK,mBACK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,mBAC3B,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,EACxC,QAAQ,EAAE,QAAQ,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EACxC,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,IAAI,EAAC,KAAK;MAEV,eAAa,CACR,CACR,CAAA;EACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, h, Prop, Element, Event, EventEmitter, Method, State } from '@stencil/core';\n\n@Component({\n  tag: 'gr-tab',\n  styleUrl: 'tab.scss',\n  shadow: true\n})\nexport class Tab {\n  @Element() el!: HTMLElement;\n\n  @State() hasFocus = false;\n\n  /** The name of the tab panel the tab will control. The panel must be located in the same tab group. */\n  @Prop({ reflect: true }) panel = '';\n\n  @Prop({ reflect: true }) active: boolean = false;\n\n  /** Set to true to draw the tab in a disabled state. */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  /**\n   * Emitted when the button has focus.\n   */\n  @Event({ eventName: 'gr-focus' }) grFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the button loses focus.\n   */\n  @Event({ eventName: 'gr-blur' }) grBlur!: EventEmitter<void>;\n\n  connectedCallback() {\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n  }\n\n  /** Sets focus on the tab. */\n  @Method()\n  async setFocus() {\n    this.el.focus();\n  }\n\n  /** Removes focus from the tab. */\n  @Method()\n  async removeFocus() {\n    this.el.blur();\n  }\n\n  onBlur() {\n    this.hasFocus = false;\n    this.grBlur.emit();\n  }\n\n  onFocus() {\n    this.hasFocus = true;\n    this.grFocus.emit();\n  }\n\n  render() {\n    const { active, disabled } = this;\n\n    return (\n      <Host\n        class={{\n          tab: true,\n          'tab-active': active,\n          'tab-disabled': disabled,\n          'tab-focused': this.hasFocus,\n        }}\n        role=\"tab\"\n        aria-disabled={disabled ? 'true' : 'false'}\n        aria-selected={active ? 'true' : 'false'}\n        tabIndex={disabled || !active ? 0 : null}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        slot=\"nav\"\n      >\n        <slot></slot>\n      </Host>\n    )\n  }\n}\n"]}