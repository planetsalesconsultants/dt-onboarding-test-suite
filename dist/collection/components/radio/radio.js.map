{"version":3,"file":"radio.js","sourceRoot":"","sources":["../../../src/components/radio/radio.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Element, State, Prop, Event, EventEmitter, Method } from '@stencil/core';\nimport { addEventListener, inheritAttributes, removeEventListener } from '../../utils/helpers';\n\nlet id = 0;\n\n/**\n * @slot - The radio's label.\n */\n@Component({\n  tag: 'gr-radio',\n  styleUrl: 'radio.scss',\n  shadow: true,\n})\nexport class Radio {\n  private inputId = `radio-${++id}`;\n  private labelId = `radio-label-${id}`;\n  private input: HTMLInputElement;\n  private radioGroup: HTMLGrRadioGroupElement | null = null;\n  private inheritedAttributes: { [k: string]: any } = {};\n\n  @Element() el: HTMLGrRadioElement;\n\n  @State() hasFocus = false;\n\n  /** The radio's value attribute. */\n  @Prop({ mutable: true, reflect: true }) value: string;\n\n  /** Set to true to disable the radio. */\n  @Prop() disabled = false;\n\n  /** Set to true to draw the radio in a checked state. */\n  @Prop({ mutable: true, reflect: true }) checked = false;\n\n  /** The radio's alignment attribute. */\n  @Prop({ reflect: true }) alignment: 'top' | 'center' | 'bottom' = 'center';\n\n  /**\n   * The tabindex of the radio button.\n   * @internal\n   */\n  @State() buttonTabindex = -1;\n\n  /** Emitted when the control loses focus. */\n  @Event({ eventName: 'gr-blur' }) grBlur: EventEmitter;\n\n  /** Emitted when the control gains focus. */\n  @Event({ eventName: 'gr-focus' }) grFocus: EventEmitter;\n\n  /** @internal */\n  @Method()\n  async setButtonTabindex(value: number) {\n    this.buttonTabindex = value;\n  }\n\n  connectedCallback() {\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n\n    if (this.value === undefined) {\n      this.value = this.inputId;\n    }\n    const radioGroup = (this.radioGroup = this.el.closest('gr-radio-group'));\n    if (radioGroup) {\n      this.updateState();\n      addEventListener(radioGroup, 'gr-change', this.updateState);\n\n      // Needed for the Vue wrappers\n      addEventListener(radioGroup, 'v-gr-change', this.updateState);\n    }\n  }\n\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n  }\n\n  disconnectedCallback() {\n    const radioGroup = this.radioGroup;\n    if (radioGroup) {\n      removeEventListener(radioGroup, 'gr-change', this.updateState);\n\n      // Needed for the Vue wrappers\n      removeEventListener(radioGroup, 'v-gr-change', this.updateState);\n      this.radioGroup = null;\n    }\n  }\n\n  /** Sets focus on the radio. */\n  @Method()\n  async setFocus(options?: FocusOptions) {\n    this.input.focus(options);\n  }\n\n  /** Removes focus from the radio. */\n  @Method()\n  async removeFocus() {\n    this.input.blur();\n  }\n\n  private updateState = () => {\n    if (this.radioGroup) {\n      this.checked = this.radioGroup.value === this.value;\n    }\n  };\n\n  handleBlur() {\n    this.hasFocus = false;\n    this.grBlur.emit();\n  }\n\n  handleFocus() {\n    this.hasFocus = true;\n    this.grFocus.emit();\n  }\n\n  render() {\n    const ariaLabelAttributes = this.inheritedAttributes['aria-label']\n      ? { 'aria-label': this.inheritedAttributes['aria-label'] }\n      : { 'aria-labelledby': this.labelId };\n\n    return (\n      <Host\n        class={{\n          'radio-disabled': this.disabled,\n        }}\n        tabindex={this.buttonTabindex}\n        role=\"radio\"\n        onBlur={this.handleBlur}\n        onFocus={this.handleFocus}\n        aria-checked={`${this.checked}`}\n        aria-hidden={this.disabled ? 'true' : null}\n        {...ariaLabelAttributes}\n      >\n        <label\n          class={{\n            'radio': true,\n            'radio-checked': this.checked,\n            'radio-disabled': this.disabled,\n            'radio-focused': this.hasFocus,\n            [`radio-${this.alignment}`]: true,\n          }}\n          htmlFor={this.inputId}\n        >\n          <span class=\"radio-control\">\n            <span class=\"radio-icon\">\n              <svg role=\"img\" aria-hidden=\"true\" viewBox=\"0 0 16 16\">\n                <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                  <g fill=\"currentColor\">\n                    <circle cx=\"8\" cy=\"8\" r=\"3.42857143\"></circle>\n                  </g>\n                </g>\n              </svg>\n            </span>\n\n            <input\n              ref={el => (this.input = el)}\n              id={this.inputId}\n              type=\"radio\"\n              value={this.value}\n              checked={this.checked}\n              disabled={this.disabled}\n              tabindex=\"-1\"\n            />\n          </span>\n\n          <span id={this.labelId} class=\"radio-label\">\n            <slot />\n          </span>\n        </label>\n      </Host>\n    );\n  }\n}\n"]}