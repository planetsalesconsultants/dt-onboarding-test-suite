{"version":3,"file":"date-picker.js","sourceRoot":"","sources":["../../../src/components/date-picker/date-picker.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Prop, Event, EventEmitter, Element, State, Watch, Method } from '@stencil/core';\nimport { DuetDatePicker } from '@duetds/date-picker/custom-element';\nimport { DaysOfWeek } from '../../enums';\nimport { browserLocalization, localization } from './date-localization';\nimport dateAdapter from './date-adapter';\nimport { DateDisabledPredicate, GrDatePickerChangeEvent, GrDatePickerDirection } from '../../interface';\nimport { DuetDatePickerChangeEvent } from '@duetds/date-picker/dist/types/components/duet-date-picker/duet-date-picker';\nimport { renderHiddenInput } from '../../utils/helpers';\nimport FormControl from '../../functional-components/form-control/form-control';\nimport { hasSlot } from '../../utils/slot';\n\nlet id = 0;\n\nif (typeof customElements !== 'undefined' && !customElements.get('duet-date-picker')) {\n  customElements.define('duet-date-picker', DuetDatePicker);\n}\n\n@Component({\n  tag: 'gr-date-picker',\n  styleUrl: 'date-picker.scss',\n  shadow: true,\n})\nexport class DatePicker {\n  private inputId = `date-picker-${++id}`;\n  private labelId = `date-picker-label-${id}`;\n  private helpTextId = `date-picker-help-text-${id}`;\n  private invalidTextId = `date-picker-invalid-text-${id}`;\n  private duetDatePicker: HTMLDuetDatePickerElement;\n\n  @Element() el: HTMLGrDatePickerElement;\n\n  @State() hasHelpTextSlot = false;\n  @State() hasInvalidTextSlot = false;\n  @State() hasLabelSlot = false;\n\n  /**\n   * Name of the date picker input.\n   */\n  @Prop() name: string = '';\n\n  /** The date picker input's placeholder text. */\n  @Prop() placeholder = '';\n\n  /**\n   * Makes the date picker input component disabled. This prevents users from being able to\n   * interact with the input, and conveys its inactive state to assistive technologies.\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  /**\n   * Forces the opening direction of the calendar modal to be always left or right.\n   * This setting can be useful when the input is smaller than the opening date picker\n   * would be as by default the picker always opens towards right.\n   */\n  @Prop() direction: GrDatePickerDirection = 'right';\n\n  /**\n   * Date value. Must be in IS0-8601 format: YYYY-MM-DD.\n   */\n  @Prop({ reflect: true, mutable: true }) value: string = '';\n\n  /**\n   * Minimum date allowed to be picked. Must be in IS0-8601 format: YYYY-MM-DD.\n   * This setting can be used alone or together with the max property.\n   */\n  @Prop() min: string = '';\n\n  /**\n   * Maximum date allowed to be picked. Must be in IS0-8601 format: YYYY-MM-DD.\n   * This setting can be used alone or together with the min property.\n   */\n  @Prop() max: string = '';\n\n  /**\n   * Which day is considered first day of the week? `0` for Sunday, `1` for Monday, etc.\n   * Default is Monday.\n   */\n  @Prop() firstDayOfWeek: DaysOfWeek = DaysOfWeek.Monday;\n\n  /**\n   * Controls which days are disabled and therefore disallowed.\n   * For example, this can be used to disallow selection of weekends.\n   */\n  @Prop() isDateDisabled: DateDisabledPredicate = () => false;\n\n  /** The date picker's label. Alternatively, you can use the label slot. */\n  @Prop() label = '';\n\n  /** Set to true to display a required indicator, adds an asterisk to label */\n  @Prop() requiredIndicator = false;\n\n  /** The date picker's help text. Alternatively, you can use the help-text slot. */\n  @Prop() helpText = '';\n\n  /** The date picker's invalid text. Alternatively, you can use the invalid-text slot. */\n  @Prop() invalidText = '';\n\n  /** Set to true to indicate this field is invalid. Will display the invalid text instead of the help text */\n  @Prop({ reflect: true }) invalid = false;\n\n  /**\n   * Specify date picker's localization.\n   * Can be used if localization is not supported internally.\n   * If not specified, defaulted to use the browser's localization and if not supported, defaulted to english.\n   */\n  @Prop() localization: localization = browserLocalization;\n\n  @Watch('helpText')\n  @Watch('invalidText')\n  @Watch('label')\n  handleLabelChange() {\n    this.handleSlotChange();\n  }\n\n  /** Emitted when a date is selected. */\n  @Event({ eventName: 'gr-change' }) grChange!: EventEmitter<GrDatePickerChangeEvent>;\n\n  /** Emitted when the date picker input gains focus. */\n  @Event({ eventName: 'gr-focus' }) grFocus!: EventEmitter<void>;\n\n  /** Emitted when the date picker input loses focus. */\n  @Event({ eventName: 'gr-blur' }) grBlur!: EventEmitter<void>;\n\n  /** Emitted when the panel opens. */\n  @Event({ eventName: 'gr-open' }) grOpen!: EventEmitter<void>;\n\n  /** Emitted when the panel closes. */\n  @Event({ eventName: 'gr-close' }) grClose!: EventEmitter<void>;\n\n  connectedCallback() {\n    this.handleDuetChange = this.handleDuetChange.bind(this);\n    this.handleDuetFocus = this.handleDuetFocus.bind(this);\n    this.handleDuetBlur = this.handleDuetBlur.bind(this);\n    this.handleDuetOpen = this.handleDuetOpen.bind(this);\n    this.handleDuetClose = this.handleDuetClose.bind(this);\n    this.handleSlotChange = this.handleSlotChange.bind(this);\n    this.handleLabelClick = this.handleLabelClick.bind(this);\n\n    this.el.shadowRoot.addEventListener('slotchange', this.handleSlotChange);\n  }\n\n  componentWillLoad() {\n    this.handleSlotChange();\n  }\n\n  disconnectedCallback() {\n    this.el.shadowRoot.removeEventListener('slotchange', this.handleSlotChange);\n  }\n\n  /**\n   * Sets focus on the date picker's input. Use this method instead of the global `focus()`.\n   */\n  @Method()\n  async setFocus() {\n    return this.duetDatePicker.setFocus();\n  }\n\n  /**\n   * Show the calendar modal, moving focus to the calendar inside.\n   */\n  @Method()\n  async show() {\n    this.duetDatePicker.show();\n  }\n\n  /**\n   * Hide the calendar modal. Set `moveFocusToButton` to false to prevent focus\n   * returning to the date picker's button. Default is true.\n   */\n  @Method()\n  async hide(moveFocusToButton = true) {\n    this.duetDatePicker.hide(moveFocusToButton);\n  }\n\n  handleSlotChange() {\n    this.hasHelpTextSlot = hasSlot(this.el, 'help-text');\n    this.hasInvalidTextSlot = hasSlot(this.el, 'invalid-text');\n    this.hasLabelSlot = hasSlot(this.el, 'label');\n  }\n\n  handleLabelClick() {\n    this.duetDatePicker.setFocus();\n  }\n\n  handleDuetChange(event: CustomEvent<DuetDatePickerChangeEvent>) {\n    event.stopPropagation();\n\n    this.value = event.detail.value;\n\n    this.grChange.emit({\n      component: 'gr-date-picker',\n      value: event.detail.value,\n      valueAsDate: event.detail.valueAsDate,\n    });\n  }\n\n  handleDuetFocus(event: CustomEvent) {\n    event.stopPropagation();\n\n    this.grFocus.emit();\n  }\n\n  handleDuetBlur(event: CustomEvent) {\n    event.stopPropagation();\n\n    this.grBlur.emit();\n  }\n\n  handleDuetOpen(event: CustomEvent) {\n    event.stopPropagation();\n\n    this.grOpen.emit();\n  }\n\n  handleDuetClose(event: CustomEvent) {\n    event.stopPropagation();\n\n    this.grClose.emit();\n  }\n\n  render() {\n    renderHiddenInput(this.el, this.name, this.value, this.disabled);\n\n    const helpText = this.helpText ? this.helpText : this.localization.helpText;\n\n    return (\n      <FormControl\n        inputId={this.inputId}\n        label={this.label}\n        labelId={this.labelId}\n        hasLabelSlot={this.hasLabelSlot}\n        helpTextId={this.helpTextId}\n        helpText={helpText}\n        hasHelpTextSlot={this.hasHelpTextSlot}\n        invalidTextId={this.invalidTextId}\n        invalidText={this.invalidText}\n        invalid={this.invalid}\n        size=\"medium\"\n        hasInvalidTextSlot={this.hasInvalidTextSlot}\n        onLabelClick={this.handleLabelClick}\n        requiredIndicator={this.requiredIndicator}\n      >\n        <duet-date-picker\n          ref={el => (this.duetDatePicker = el)}\n          name={this.name}\n          disabled={this.disabled}\n          direction={this.direction}\n          value={this.value}\n          min={this.min}\n          max={this.max}\n          firstDayOfWeek={this.firstDayOfWeek}\n          localization={{ ...this.localization, placeholder: this.placeholder }}\n          dateAdapter={dateAdapter}\n          isDateDisabled={this.isDateDisabled}\n          onDuetChange={this.handleDuetChange}\n          onDuetFocus={this.handleDuetFocus}\n          onDuetBlur={this.handleDuetBlur}\n          onDuetOpen={this.handleDuetOpen}\n          onDuetClose={this.handleDuetClose}\n          class={{\n            'date-picker-disabled': this.disabled,\n            'date-picker-invalid': this.invalid,\n          }}\n        ></duet-date-picker>\n      </FormControl>\n    );\n  }\n}\n"]}