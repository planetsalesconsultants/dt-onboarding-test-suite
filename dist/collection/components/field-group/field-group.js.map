{"version":3,"file":"field-group.js","sourceRoot":"","sources":["../../../src/components/field-group/field-group.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC1E,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAE3C;;;GAGG;AAMH,MAAM,OAAO,UAAU;;wBAGG,KAAK;iBAGb,EAAE;sBAGoB,KAAK;;EAG3C,iBAAiB;IACf,IAAI,CAAC,gBAAgB,EAAE,CAAC;EAC1B,CAAC;EAED,iBAAiB;IACf,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEzD,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;EAC3E,CAAC;EAED,iBAAiB;IACf,IAAI,CAAC,gBAAgB,EAAE,CAAC;EAC1B,CAAC;EAED,oBAAoB;IAClB,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;EAC9E,CAAC;EAED,gBAAgB;IACd,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;EAChD,CAAC;EAED,MAAM;IACJ,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;IAEvD,OAAO,CACL,gBACE,KAAK,EAAE;QACL,aAAa,EAAE,IAAI;QACnB,wBAAwB,EAAE,IAAI,CAAC,UAAU;QACzC,uBAAuB,EAAE,QAAQ;OAClC;MAED,cAAQ,KAAK,EAAC,mBAAmB,iBAAc,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM;QACxE,YAAM,IAAI,EAAC,OAAO,IAAE,IAAI,CAAC,KAAK,CAAQ,CAC/B;MACT,WAAK,KAAK,EAAC,SAAS;QAClB,eAAa,CACT,CACG,CACZ,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Prop, Element, State, Watch } from '@stencil/core';\nimport { hasSlot } from '../../utils/slot';\n\n/**\n * @slot - The default slot where fields are placed.\n * @slot label - The field group label. Recommended for proper accessibility. Alternatively, you can use the label prop.\n */\n@Component({\n  tag: 'gr-field-group',\n  styleUrl: 'field-group.scss',\n  shadow: true,\n})\nexport class FieldGroup {\n  @Element() el!: HTMLElement;\n\n  @State() hasLabelSlot = false;\n\n  /** The field group label. Recommended for proper accessibility. Alternatively, you can use the label slot. */\n  @Prop() label = '';\n\n  /** Render the fields horizontal instead of vertical */\n  @Prop({ reflect: true }) horizontal = false;\n\n  @Watch('label')\n  handleLabelChange() {\n    this.handleSlotChange();\n  }\n\n  connectedCallback() {\n    this.handleSlotChange = this.handleSlotChange.bind(this);\n\n    this.el.shadowRoot.addEventListener('slotchange', this.handleSlotChange);\n  }\n\n  componentWillLoad() {\n    this.handleSlotChange();\n  }\n\n  disconnectedCallback() {\n    this.el.shadowRoot.removeEventListener('slotchange', this.handleSlotChange);\n  }\n\n  handleSlotChange() {\n    this.hasLabelSlot = hasSlot(this.el, 'label');\n  }\n\n  render() {\n    const hasLabel = this.label ? true : this.hasLabelSlot;\n\n    return (\n      <fieldset\n        class={{\n          'field-group': true,\n          'field-group-horizontal': this.horizontal,\n          'field-group-has-label': hasLabel,\n        }}\n      >\n        <legend class=\"field-group-label\" aria-hidden={hasLabel ? 'false' : 'true'}>\n          <slot name=\"label\">{this.label}</slot>\n        </legend>\n        <div class=\"content\">\n          <slot></slot>\n        </div>\n      </fieldset>\n    );\n  }\n}\n"]}