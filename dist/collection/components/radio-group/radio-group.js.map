{"version":3,"file":"radio-group.js","sourceRoot":"","sources":["../../../src/components/radio-group/radio-group.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Prop, Event, EventEmitter, Watch, Element, Listen, State, Host } from '@stencil/core';\nimport { renderHiddenInput } from '../../utils/helpers';\nimport { hasSlot } from '../../utils/slot';\nimport { RadioGroupChangeEventDetail } from './radio-group-interface';\n\nlet id = 0;\n\n/**\n * @slot - The default slot where radio controls are placed.\n * @slot label - The radio group label. Required for proper accessibility. Alternatively, you can use the label prop.\n * @slot invalid-text - Invalid text tells a user how to fix the error. Alternatively, you can use the invalid-text prop.\n */\n@Component({\n  tag: 'gr-radio-group',\n  styleUrl: 'radio-group.scss',\n  shadow: true,\n})\nexport class RadioGroup {\n  private inputId = `radio-group-${id++}`;\n  private invalidTextId = `radio-group-invalid-text-${id++}`;\n\n  @Element() el!: HTMLElement;\n\n  @State() hasLabelSlot = false;\n  @State() hasInvalidTextSlot = false;\n\n  /** If `true`, the radios can be deselected. */\n  @Prop() allowEmptySelection = false;\n\n  /** The radio group label. Required for proper accessibility. Alternatively, you can use the label slot. */\n  @Prop() label = '';\n\n  /** Set to true to display a required indicator, adds an asterisk to label */\n  @Prop() requiredIndicator = false;\n\n  /** The radio group's invalid text. Alternatively, you can use the invalid-text slot. */\n  @Prop() invalidText = '';\n\n  /** Set to true to indicate this field is invalid. Will display the invalid text. */\n  @Prop({ reflect: true }) invalid = false;\n\n  /** Render the radios horizontal instead of vertical */\n  @Prop({ reflect: true }) horizontal = false;\n\n  /** The name of the control, which is submitted with the form data. */\n  @Prop() name: string = this.inputId;\n\n  /** the value of the radio group. */\n  @Prop({ mutable: true }) value?: any | null;\n\n  @Watch('value')\n  valueChanged(value: any | undefined) {\n    this.setRadioTabindex(value);\n\n    this.grChange.emit({ value });\n  }\n\n  @Watch('label')\n  @Watch('invalidText')\n  handleLabelChange() {\n    this.handleSlotChange();\n  }\n\n  /** Emitted when the value has changed. */\n  @Event({ eventName: 'gr-change' }) grChange!: EventEmitter<RadioGroupChangeEventDetail>;\n\n  connectedCallback() {\n    this.handleSlotChange = this.handleSlotChange.bind(this);\n\n    this.el.shadowRoot.addEventListener('slotchange', this.handleSlotChange);\n  }\n\n  componentWillLoad() {\n    this.handleSlotChange();\n  }\n\n  componentDidLoad() {\n    this.setRadioTabindex(this.value);\n  }\n\n  disconnectedCallback() {\n    this.el.shadowRoot.removeEventListener('slotchange', this.handleSlotChange);\n  }\n\n  private setRadioTabindex = (value: any | undefined) => {\n    const radios = this.getRadios();\n\n    // Get the first radio that is not disabled and the checked one\n    const first = radios.find(radio => !radio.disabled);\n    const checked = radios.find(radio => radio.value === value && !radio.disabled);\n\n    if (!first && !checked) {\n      return;\n    }\n\n    // If an enabled checked radio exists, set it to be the focusable radio\n    // otherwise we default to focus the first radio\n    const focusable = checked || first;\n\n    for (const radio of radios) {\n      const tabindex = radio === focusable ? 0 : -1;\n      radio.setButtonTabindex(tabindex);\n    }\n  };\n\n  private getRadios(): HTMLGrRadioElement[] {\n    return Array.from(this.el.querySelectorAll('gr-radio'));\n  }\n\n  private onClick = (ev: Event) => {\n    ev.preventDefault();\n\n    const selectedRadio = ev.target && (ev.target as HTMLElement).closest('gr-radio');\n    if (selectedRadio) {\n      const currentValue = this.value;\n      const newValue = selectedRadio.value;\n      if (newValue !== currentValue) {\n        this.value = newValue;\n      } else if (this.allowEmptySelection) {\n        this.value = undefined;\n      }\n    }\n  };\n\n  @Listen('keydown', { target: 'document' })\n  onKeydown(ev: any) {\n    if (ev.target && !this.el.contains(ev.target)) {\n      return;\n    }\n\n    // Get all radios inside of the radio group and then\n    // filter out disabled radios since we need to skip those\n    const radios = this.getRadios().filter(radio => !radio.disabled);\n\n    // Only move the radio if the current focus is in the radio group\n    if (ev.target && radios.includes(ev.target)) {\n      const index = radios.findIndex(radio => radio === ev.target);\n      const current = radios[index];\n\n      let next;\n\n      // If hitting arrow down or arrow right, move to the next radio\n      // If we're on the last radio, move to the first radio\n      if (['ArrowDown', 'ArrowRight'].includes(ev.code)) {\n        next = index === radios.length - 1 ? radios[0] : radios[index + 1];\n\n        // Prevent browsers from scrolling\n        ev.preventDefault();\n      }\n\n      // If hitting arrow up or arrow left, move to the previous radio\n      // If we're on the first radio, move to the last radio\n      if (['ArrowUp', 'ArrowLeft'].includes(ev.code)) {\n        next = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n\n        // Prevent browsers from scrolling\n        ev.preventDefault();\n      }\n\n      if (next && radios.includes(next)) {\n        next.setFocus(ev);\n        this.value = next.value;\n      }\n\n      // Update the radio group value when a user presses the\n      // space bar on top of a selected radio\n      if (['Space'].includes(ev.code)) {\n        this.value = this.allowEmptySelection && this.value !== undefined ? undefined : current.value;\n\n        // Prevent browsers from jumping\n        // to the bottom of the screen\n        ev.preventDefault();\n      }\n    }\n  }\n\n  handleSlotChange() {\n    this.hasLabelSlot = hasSlot(this.el, 'label');\n    this.hasInvalidTextSlot = hasSlot(this.el, 'invalid-text');\n  }\n\n  render() {\n    renderHiddenInput(this.el, this.name, this.value, false);\n\n    const hasLabel = this.label ? true : this.hasLabelSlot;\n    const hasInvalidText = this.invalidText ? true : this.hasInvalidTextSlot;\n    const showInvalidText = this.invalid ? true : false;\n\n    return (\n      <Host onClick={this.onClick}>\n        <fieldset\n          class={{\n            'radio-group': true,\n            'radio-group-horizontal': this.horizontal,\n            'radio-group-invalid': this.invalid,\n            'radio-group-has-label': hasLabel,\n            'radio-group-has-invalid-text': hasInvalidText,\n          }}\n          role=\"radiogroup\"\n          aria-invalid={this.invalid}\n          aria-required={this.requiredIndicator ? 'true' : 'false'}\n          aria-describedby={this.invalid ? this.invalidTextId : ''}\n        >\n          <legend class=\"radio-group-label\" aria-hidden={hasLabel ? 'false' : 'true'}>\n            <slot name=\"label\">{this.label}</slot>\n            {this.requiredIndicator && (\n              <span class=\"asterisk\">\n                <svg role=\"img\" aria-hidden=\"true\" viewBox=\"0 0 1200 1200\">\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M489.838 29.354v443.603L68.032 335.894 0 545.285l421.829 137.086-260.743 358.876 178.219 129.398L600.048 811.84l260.673 358.806 178.146-129.398-260.766-358.783L1200 545.379l-68.032-209.403-421.899 137.07V29.443H489.84l-.002-.089z\"\n                  />\n                </svg>\n              </span>\n            )}\n          </legend>\n          <div class=\"content\">\n            <slot></slot>\n          </div>\n          {showInvalidText && (\n            <div\n              id={this.invalidTextId}\n              class=\"radio-group-invalid-text\"\n              aria-hidden={hasInvalidText ? 'false' : 'true'}\n            >\n              <div class=\"icon\">\n                <svg role=\"img\" aria-hidden=\"true\" viewBox=\"0 0 512 512\">\n                  <title>Alert Circle</title>\n                  <path\n                    d=\"M256,48C141.31,48,48,141.31,48,256s93.31,208,208,208,208-93.31,208-208S370.69,48,256,48Zm0,319.91a20,20,0,1,1,20-20A20,20,0,0,1,256,367.91Zm21.72-201.15-5.74,122a16,16,0,0,1-32,0l-5.74-121.94v-.05a21.74,21.74,0,1,1,43.44,0Z\"\n                    fill=\"currentColor\"\n                  />\n                </svg>\n              </div>\n              <div class=\"text\">\n                <slot name=\"invalid-text\">{this.invalidText}</slot>\n              </div>\n            </div>\n          )}\n        </fieldset>\n      </Host>\n    );\n  }\n}\n"]}