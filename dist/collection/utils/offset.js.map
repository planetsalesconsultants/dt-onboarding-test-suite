{"version":3,"file":"offset.js","sourceRoot":"","sources":["../../src/utils/offset.ts"],"names":[],"mappings":"AAAA,EAAE;AACF,sHAAsH;AACtH,6DAA6D;AAC7D,EAAE;AACF,kHAAkH;AAClH,2HAA2H;AAC3H,EAAE;AACF,MAAM,UAAU,SAAS,CAAC,OAAoB,EAAE,MAAmB;EACjE,OAAO;IACL,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC,GAAG,CAAC;IACzF,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,IAAI,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC;GAC7F,CAAC;AACJ,CAAC","sourcesContent":["//\n// Returns an element's offset relative to its parent. Similar to element.offsetTop and element.offsetLeft, except the\n// parent doesn't have to be positioned relative or absolute.\n//\n// NOTE: This was created to work around what appears to be a bug in Chrome where a slotted element's offsetParent\n// seems to ignore elements inside the surrounding shadow DOM: https://bugs.chromium.org/p/chromium/issues/detail?id=920069\n//\nexport function getOffset(element: HTMLElement, parent: HTMLElement) {\n  return {\n    top: Math.round(element.getBoundingClientRect().top - parent.getBoundingClientRect().top),\n    left: Math.round(element.getBoundingClientRect().left - parent.getBoundingClientRect().left)\n  };  \n}\n"]}