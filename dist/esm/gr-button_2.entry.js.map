{"file":"gr-button.gr-spinner.entry.js","mappings":"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","names":[],"sources":["./src/components/button/button.scss?tag=gr-button&encapsulation=shadow","./src/components/button/button.tsx","./src/components/spinner/spinner.scss?tag=gr-spinner&encapsulation=shadow","./src/components/spinner/spinner.tsx"],"sourcesContent":["@import '../../themes/graphite.globals';\n\n// Button\n// --------------------------------------------------\n\n:host {\n  /**\n   * @prop --background: Background of the button\n   * @prop --background-hover: Background of the button on hover\n   * @prop --background-focus: Background of the button on focus\n   *\n   * @prop --color: Text color of the button\n   * @prop --color-hover: Text color of the button on hover\n   * @prop --color-focus: Text color of the button on focus\n   *\n   * @prop --transition: Transition of the button\n   *\n   * @prop --border-radius: Border radius of the button\n   * @prop --border-width: Border width of the button\n   * @prop --border-style: Border style of the button\n   * @prop --border-color: Border color of the button\n   * @prop --border-color-hover: Border color of the button on hover\n   * @prop --border-color-focus: Border color of the button on focus\n   *\n   * @prop --padding-top: Top padding of the button\n   * @prop --padding-end: Right padding of the button (will be left padding when we support right-to-left direction)\n   * @prop --padding-bottom: Bottom padding of the button\n   * @prop --padding-start: Left padding of the button (will be right padding when we support right-to-left direction)\n   *\n   * @prop --height: Height of the button\n   *\n   * @prop --focus-ring: The focus ring style to use when the button receives focus, a `box-shadow` property.\n   *\n   * @prop --shadow: Shadow of the button, a `box-shadow` property. Please note this will be overwritted by `--focus-ring` on focus.\n   */\n  display: inline-block;\n\n  width: auto;\n\n  font-family: var(--gr-font-family);\n  font-weight: var(--gr-font-weight-medium);\n  font-size: var(--gr-form-element-font-size-medium);\n  font-kerning: none;\n\n  user-select: none;\n  vertical-align: top;\n  vertical-align: -webkit-baseline-middle;\n  pointer-events: auto;\n\n  --height: var(--gr-form-element-height-medium);\n\n  --border-radius: var(--gr-form-element-border-radius-medium);\n  --border-width: 1px;\n  --border-style: solid;\n\n  --background: transparent;\n  --background-hover: transparent;\n  --background-focus: transparent;\n\n  --color: var(--gr-color-dark-tint);\n  --color-hover: var(--gr-color-dark-tint);\n  --color-focus: var(--gr-color-dark-tint);\n\n  --border-color: var(--gr-color-light-shade);\n  --border-color-hover: var(--gr-color-medium);\n  --border-color-focus: var(--gr-color-primary);\n\n  --padding-top: 0;\n  --padding-start: var(--gr-spacing-medium);\n  --padding-end: var(--gr-spacing-medium);\n  --padding-bottom: 0;\n\n  --focus-ring: 0 0 0 var(--gr-focus-ring-width) rgb(var(--gr-color-primary-rgb), 0.33);\n\n  --shadow: none;\n\n  --transition: background-color 150ms linear, opacity 150ms linear, border 150ms linear, color 150ms linear;\n}\n\n:host(.button-disabled) {\n  pointer-events: none;\n  opacity: 0.5;\n}\n\n// Primary variant\n// --------------------------------------------------\n\n:host(.button-primary) {\n  --border-color: var(--gr-color-primary);\n  --background: var(--gr-color-primary);\n  --color: var(--gr-color-primary-contrast);\n\n  --border-color-hover: var(--gr-color-primary-shade);\n  --background-hover: var(--gr-color-primary-shade);\n  --color-hover: var(--gr-color-primary-contrast);\n\n  --border-color-focus: var(--gr-color-primary);\n  --background-focus: var(--gr-color-primary-shade);\n  --color-focus: var(--gr-color-primary-contrast);\n  --focus-ring: 0 0 0 var(--gr-focus-ring-width) rgb(var(--gr-color-primary-rgb), 0.33);\n}\n\n// Secondary variant\n// --------------------------------------------------\n\n:host(.button-secondary) {\n  --border-color: var(--gr-color-light-shade);\n  --background: transparent;\n  --color: var(--gr-color-primary);\n\n  --border-color-hover: var(--gr-color-primary);\n  --background-hover: transparent;\n  --color-hover: var(--gr-color-primary);\n\n  --border-color-focus: var(--gr-color-primary);\n  --background-focus: transparent;\n  --color-focus: var(--gr-color-primary);\n  --focus-ring: 0 0 0 var(--gr-focus-ring-width) rgb(var(--gr-color-primary-rgb), 0.33);\n}\n\n// Danger variant\n// --------------------------------------------------\n\n:host(.button-danger) {\n  --border-color: var(--gr-color-danger);\n  --background: transparent;\n  --color: var(--gr-color-danger);\n\n  --border-color-hover: var(--gr-color-danger);\n  --background-hover: var(--gr-color-danger);\n  --color-hover: var(--gr-color-danger-contrast);\n\n  --border-color-focus: var(--gr-color-danger);\n  --background-focus: var(--gr-color-danger);\n  --color-focus: var(--gr-color-danger-contrast);\n  --focus-ring: 0 0 0 var(--gr-focus-ring-width) rgb(var(--gr-color-danger-rgb), 0.33);\n}\n\n// Plain variant\n// --------------------------------------------------\n\n:host(.button-plain) {\n  --border-color: transparent;\n  --background: transparent;\n  --color: var(--gr-color-primary);\n\n  --border-color-hover: transparent;\n  --background-hover: transparent;\n  --color-hover: var(--gr-color-primary-shade);\n\n  --border-color-focus: transparent;\n  --background-focus: transparent;\n  --color-focus: var(--gr-color-primary-shade);\n  --focus-ring: 0 0 0 var(--gr-focus-ring-width) rgb(var(--gr-color-primary-rgb), 0.33);\n}\n\n// Sizes\n// --------------------------------------------------\n\n:host(.button-small) {\n  --padding-start: var(--gr-spacing-small);\n  --padding-end: var(--gr-spacing-small);\n\n  --border-radius: var(--gr-form-element-border-radius-small);\n\n  --height: var(--gr-form-element-height-small);\n\n  font-size: var(--gr-form-element-font-size-small);\n}\n\n:host(.button-large) {\n  --padding-start: var(--gr-spacing-large);\n  --padding-end: var(--gr-spacing-large);\n\n  --border-radius: var(--gr-form-element-border-radius-large);\n\n  --height: var(--gr-form-element-height-large);\n\n  font-size: var(--gr-form-element-font-size-large);\n}\n\n// Block Button\n// --------------------------------------------------\n\n:host(.button-block) {\n  display: block;\n}\n\n:host(.button-block) .button-native {\n  margin-left: 0;\n  margin-right: 0;\n\n  display: block;\n\n  width: 100%;\n\n  clear: both;\n\n  contain: content;\n}\n\n:host(.button-block) .button-native::after {\n  clear: both;\n}\n\n// Full button\n// --------------------------------------------------\n\n:host(.button-full) {\n  display: block;\n}\n\n:host(.button-full) .button-native {\n  margin-left: 0;\n  margin-right: 0;\n\n  display: block;\n\n  width: 100%;\n\n  contain: content;\n\n  border-radius: 0;\n\n  border-right-width: 0;\n  border-left-width: 0;\n}\n\n.button-native {\n  @include text-inherit();\n\n  display: block;\n  position: relative;\n\n  padding-top: var(--padding-top);\n  padding-left: var(--padding-start);\n  padding-right: var(--padding-end);\n  padding-bottom: var(--padding-bottom);\n\n  width: 100%;\n  height: var(--height);\n\n  transition: var(--transition);\n\n  border-radius: var(--border-radius);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n\n  background: var(--background);\n  color: var(--color);\n\n  box-shadow: var(--shadow);\n\n  line-height: 1;\n\n  cursor: pointer;\n\n  z-index: 0;\n\n  text-decoration: none;\n\n  &::-moz-focus-inner {\n    border: 0;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: var(--focus-ring);\n    border-color: var(--border-color-focus);\n    background-color: var(--background-focus);\n    color: var(--color-focus);\n  }\n\n  box-sizing: border-box;\n\n  & *,\n  & *:before,\n  & *:after {\n    box-sizing: inherit;\n  }\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 100%;\n\n  z-index: 1;\n}\n\n// Circle modifier\n// --------------------------------------------------\n\n:host(.button-circle) .button-native {\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  border-radius: 50%;\n  width: var(--height);\n}\n\n// Button: States\n// --------------------------------------------------\n\n@media (any-hover: hover) {\n  .button-native:hover {\n    color: var(--color-hover);\n    background: var(--background-hover);\n    border-color: var(--border-color-hover);\n  }\n}\n\n// Caret modifier\n// --------------------------------------------------\n\n:host(.button-caret) .caret {\n  display: flex;\n  align-items: center;\n  margin-left: 0.3em;\n\n  svg {\n    width: 1em;\n    height: 1em;\n  }\n}\n\n// Pill modifier\n// --------------------------------------------------\n\n:host(.button-pill) .button-native {\n  border-radius: var(--height);\n}\n\n// Button Icons\n// --------------------------------------------------\n\n::slotted(*) {\n  pointer-events: none;\n}\n\n::slotted([slot='start']) {\n  margin-top: 0;\n  margin-left: -0.3em;\n  margin-right: 0.3em;\n  margin-bottom: 0;\n}\n\n::slotted([slot='end']) {\n  margin-top: 0;\n  margin-left: 0.3em;\n  margin-right: -0.2em;\n  margin-bottom: 0;\n}\n\n::slotted([slot='icon-only']) {\n  font-size: 1.4em;\n  pointer-events: none;\n}\n\n// Loading modifier\n// --------------------------------------------------\n\n:host(.button-loading) {\n  position: relative;\n  pointer-events: none;\n\n  .caret {\n    visibility: hidden;\n  }\n\n  slot[name='start'],\n  slot[name='end'],\n  slot[name='icon-only'],\n  slot:not([name]) {\n    visibility: hidden;\n  }\n\n  gr-spinner {\n    --indicator-color: currentColor;\n    position: absolute;\n    height: 1em;\n    width: 1em;\n    top: calc(50% - 0.5em);\n    left: calc(50% - 0.5em);\n  }\n}\n\n// Safari bug workaround\n// --------------------------------------------------\n@media not all and (min-resolution: 0.001dpcm) {\n  @supports (-webkit-appearance: none) and (stroke-color: transparent) {\n    :host([type='button']),\n    :host([type='reset']),\n    :host([type='submit']) {\n      -webkit-appearance: none !important;\n    }\n  }\n}\n","import { Component, Host, h, Prop, Element, Event, EventEmitter, Method } from '@stencil/core';\nimport { inheritAttributes } from '../../utils/helpers';\n\n/**\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot icon-only - Should be used on an icon in a button that has no text.\n * @slot start - Content is placed to the left of the button text (will be to the right when we support right-to-left direction)\n * @slot end - Content is placed to the right of the button text (will be to the left when we support right-to-left direction)\n */\n@Component({\n  tag: 'gr-button',\n  styleUrl: 'button.scss',\n  shadow: true,\n})\nexport class Button {\n  private inheritedAttributes: { [k: string]: any } = {};\n  private button: HTMLElement;\n\n  @Element() el!: HTMLElement;\n\n  /**\n   * The different variants.\n   * The options are: `\"default\"`, `\"primary\"`, `\"secondary\"`, `\"danger\"`, and `\"plain\"`.\n   */\n  @Prop({ reflect: true }) variant?: 'default' | 'primary' | 'secondary' | 'danger' | 'plain' = 'default';\n\n  /**\n   * If `true`, the user cannot interact with the button.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Set to true to draw the button in a loading state.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * The button's size.\n   */\n  @Prop({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Set to true to draw the button with a caret for use with dropdowns, popovers, etc.\n   */\n  @Prop() caret = false;\n\n  /**\n   * Set to true to draw a pill-style button with rounded edges.\n   */\n  @Prop({ reflect: true }) pill = false;\n\n  /**\n   * Set to `\"block\"` for a full-width button or to `\"full\"` for a full-width button\n   * without left and right borders.\n   */\n  @Prop({ reflect: true }) expand?: 'full' | 'block';\n\n  /**\n   * Set to true to draw a circle button.\n   */\n  @Prop({ reflect: true }) circle = false;\n\n  /**\n   * Contains a URL or a URL fragment that the hyperlink points to.\n   */\n  @Prop() href: string | undefined;\n\n  /**\n   * Specifies where to display the linked URL.\n   * Special keywords: `\"_blank\"`, `\"_self\"`, `\"_parent\"`, `\"_top\"`.\n   */\n  @Prop() target: string | undefined;\n\n  /**\n   * Specifies the relationship of the target object to the link object.\n   * The value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).\n   */\n  @Prop() rel: string | undefined;\n\n  /**\n   * The type of the button.\n   */\n  @Prop() type: 'submit' | 'reset' | 'button' = 'button';\n\n  /**\n   * Emitted when the button has focus.\n   */\n  @Event({ eventName: 'gr-focus' }) grFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the button loses focus.\n   */\n  @Event({ eventName: 'gr-blur' }) grBlur!: EventEmitter<void>;\n\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label', 'tabindex', 'title']);\n  }\n\n  /** Sets focus on the button. */\n  @Method()\n  async setFocus(options?: FocusOptions) {\n    this.button.focus(options);\n  }\n\n  /** Removes focus from the button. */\n  @Method()\n  async removeFocus() {\n    this.button.blur();\n  }\n\n  private handleClick = (ev: MouseEvent) => {\n    if (this.type !== 'button') {\n      // this button wants to specifically submit/reset a form\n      // climb up the dom to see if we're in a <form>\n      // and if so, then use JS to submit/reset it\n      const form = this.el.closest('form');\n      if (form) {\n        ev.preventDefault();\n\n        const fakeButton = document.createElement('button');\n        fakeButton.type = this.type;\n        fakeButton.style.display = 'none';\n        form.appendChild(fakeButton);\n        fakeButton.click();\n        fakeButton.remove();\n      }\n    }\n  };\n\n  private onFocus = () => {\n    this.grFocus.emit();\n  };\n\n  private onBlur = () => {\n    this.grBlur.emit();\n  };\n\n  render() {\n    const { rel, target, href, variant, size, expand, type, inheritedAttributes, disabled } = this;\n    const TagType = href === undefined ? 'button' : ('a' as any);\n    const attrs =\n      TagType === 'button'\n        ? { type }\n        : {\n            href,\n            rel,\n            target,\n          };\n\n    return (\n      <Host\n        onClick={this.handleClick}\n        aria-disabled={disabled ? 'true' : null}\n        class={{\n          [`button-${variant}`]: true,\n          [`button-${size}`]: true,\n          [`button-${expand}`]: expand !== undefined,\n          'button-caret': this.caret,\n          'button-circle': this.circle,\n          'button-pill': this.pill,\n          'button-disabled': disabled,\n          'button-loading': this.loading,\n        }}\n      >\n        <TagType\n          ref={el => (this.button = el)}\n          {...attrs}\n          class=\"button-native\"\n          disabled={disabled}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          {...inheritedAttributes}\n        >\n          <span class=\"button-inner\">\n            <slot name=\"icon-only\"></slot>\n            <slot name=\"start\"></slot>\n            <slot></slot>\n            <slot name=\"end\"></slot>\n            {this.caret && (\n              <span class=\"caret\">\n                <svg role=\"img\" aria-hidden=\"true\" viewBox=\"0 0 512 512\">\n                  <title>Chevron Down</title>\n                  <path\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"48\"\n                    d=\"M112 184l144 144 144-144\"\n                  />\n                </svg>\n              </span>\n            )}\n          </span>\n\n          {this.loading && <gr-spinner />}\n        </TagType>\n      </Host>\n    );\n  }\n}\n","/**\n * @prop --track-color: The color of the spinner's track.\n * @prop --indicator-color: The color of the spinner's indicator.\n * @prop --stroke-width: The width of the indicator.\n */\n:host {\n  --track-color: var(--gr-color-light-shade);\n  --indicator-color: var(--gr-color-primary);\n  --stroke-width: 2px;\n\n  display: inline-flex;\n\n  box-sizing: border-box;\n\n  & *,\n  & *:before,\n  & *:after {\n    box-sizing: inherit;\n  }\n}\n\n.spinner {\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  border: solid var(--stroke-width) var(--track-color);\n  border-top-color: var(--indicator-color);\n  border-right-color: var(--indicator-color);\n  animation: 1s linear infinite spin;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'gr-spinner',\n  styleUrl: 'spinner.scss',\n  shadow: true,\n})\nexport class Spinner {\n  render() {\n    return <span class=\"spinner\" aria-busy=\"true\" aria-live=\"polite\" />;\n  }\n}\n"],"version":3}