{"file":"form-control-2d507c68.js","mappings":";;;;;MA8CM,WAAW,GAA0C,CAAC,KAAK,EAAE,QAAQ;EACzE,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC;EACzD,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,GAAG,IAAI,GAAG,KAAK,CAAC,eAAe,CAAC;EAClE,MAAM,cAAc,GAAG,KAAK,CAAC,WAAW,GAAG,IAAI,GAAG,KAAK,CAAC,kBAAkB,CAAC;EAC3E,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC;EAClD,MAAM,eAAe,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC;EAErD,QACE,WACE,KAAK,EAAE;MACL,cAAc,EAAE,IAAI;MACpB,CAAC,gBAAgB,KAAK,CAAC,IAAI,EAAE,GAAG,IAAI;MACpC,wBAAwB,EAAE,QAAQ;MAClC,4BAA4B,EAAE,WAAW;MACzC,+BAA+B,EAAE,cAAc;KAChD;IAED,aACE,EAAE,EAAE,KAAK,CAAC,OAAO,EACjB,KAAK,EAAC,oBAAoB,EAC1B,OAAO,EAAE,KAAK,CAAC,OAAO,iBACT,QAAQ,GAAG,OAAO,GAAG,MAAM,EACxC,OAAO,EAAE,KAAK,CAAC,YAAY;MAE3B,YAAM,IAAI,EAAC,OAAO,IAAE,KAAK,CAAC,KAAK,CAAQ;MACtC,KAAK,CAAC,iBAAiB,KACtB,WAAK,KAAK,EAAC,UAAU;QACnB,WAAK,IAAI,EAAC,KAAK,iBAAa,MAAM,EAAC,OAAO,EAAC,eAAe;UACxD,YACE,IAAI,EAAC,cAAc,EACnB,CAAC,EAAC,uOAAuO,GACzO,CACE,CACF,CACP,CACK;IAER,WAAK,KAAK,EAAC,oBAAoB,IAAE,QAAQ,CAAO;IAE/C,YAAY,KACX,WAAK,EAAE,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,EAAC,wBAAwB,iBAAc,WAAW,GAAG,OAAO,GAAG,MAAM;MACnG,YAAM,IAAI,EAAC,WAAW,IAAE,KAAK,CAAC,QAAQ,CAAQ,CAC1C,CACP;IAEA,eAAe,KACd,WAAK,EAAE,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,EAAC,2BAA2B,iBAAc,cAAc,GAAG,OAAO,GAAG,MAAM;MAC5G,WAAK,KAAK,EAAC,MAAM;QACf,WAAK,IAAI,EAAC,KAAK,iBAAa,MAAM,EAAC,OAAO,EAAC,aAAa;UACtD,gCAA2B;UAC3B,YACE,CAAC,EAAC,iOAAiO,EACnO,IAAI,EAAC,cAAc,GACnB,CACE,CACF;MACN,WAAK,KAAK,EAAC,MAAM;QACf,YAAM,IAAI,EAAC,cAAc,IAAE,KAAK,CAAC,WAAW,CAAQ,CAChD,CACF,CACP,CACG,EACN;AACJ;;;;","names":[],"sources":["./src/functional-components/form-control/form-control.tsx"],"sourcesContent":["import { h, FunctionalComponent } from '@stencil/core';\n\nexport interface FormControlProps {\n  /** The input id, used to map the input to the label */\n  inputId: string;\n\n  /** The size of the form control */\n  size: 'small' | 'medium' | 'large';\n\n  /** The label id, used to map the label to the input */\n  labelId?: string;\n\n  /** The label text (if the label slot isn't used) */\n  label?: string;\n\n  /** Whether or not a label slot has been provided. */\n  hasLabelSlot?: boolean;\n\n  /** The help text id, used to map the input to the help text */\n  helpTextId?: string;\n\n  /** The help text (if the help-text slot isn't used) */\n  helpText?: string;\n\n  /** Whether or not a help text slot has been provided. */\n  hasHelpTextSlot?: boolean;\n\n  /** The invalid text id, used to map the input to the invalid text */\n  invalidTextId?: string;\n\n  /** The invalid text (if the invalid-text slot isn't used) */\n  invalidText?: string;\n\n  /** Whether or not a invalid text slot has been provided. */\n  hasInvalidTextSlot?: boolean;\n\n  /** Whether or not the invalid text should be shown instead of the help text */\n  invalid?: boolean;\n\n  /** Whether or not to display a required indicator should be shown (asterisk) */\n  requiredIndicator?: boolean;\n\n  /** A function that gets called when the label is clicked. */\n  onLabelClick?: (event: MouseEvent) => void;\n}\n\nconst FormControl: FunctionalComponent<FormControlProps> = (props, children) => {\n  const hasLabel = props.label ? true : props.hasLabelSlot;\n  const hasHelpText = props.helpText ? true : props.hasHelpTextSlot;\n  const hasInvalidText = props.invalidText ? true : props.hasInvalidTextSlot;\n  const showHelpText = props.invalid ? false : true;\n  const showInvalidText = props.invalid ? true : false;\n\n  return (\n    <div\n      class={{\n        'form-control': true,\n        [`form-control-${props.size}`]: true,\n        'form-control-has-label': hasLabel,\n        'form-control-has-help-text': hasHelpText,\n        'form-control-has-invalid-text': hasInvalidText,\n      }}\n    >\n      <label\n        id={props.labelId}\n        class=\"form-control-label\"\n        htmlFor={props.inputId}\n        aria-hidden={hasLabel ? 'false' : 'true'}\n        onClick={props.onLabelClick}\n      >\n        <slot name=\"label\">{props.label}</slot>\n        {props.requiredIndicator && (\n          <div class=\"asterisk\">\n            <svg role=\"img\" aria-hidden=\"true\" viewBox=\"0 0 1200 1200\">\n              <path\n                fill=\"currentColor\"\n                d=\"M489.838 29.354v443.603L68.032 335.894 0 545.285l421.829 137.086-260.743 358.876 178.219 129.398L600.048 811.84l260.673 358.806 178.146-129.398-260.766-358.783L1200 545.379l-68.032-209.403-421.899 137.07V29.443H489.84l-.002-.089z\"\n              />\n            </svg>\n          </div>\n        )}\n      </label>\n\n      <div class=\"form-control-input\">{children}</div>\n\n      {showHelpText && (\n        <div id={props.helpTextId} class=\"form-control-help-text\" aria-hidden={hasHelpText ? 'false' : 'true'}>\n          <slot name=\"help-text\">{props.helpText}</slot>\n        </div>\n      )}\n\n      {showInvalidText && (\n        <div id={props.invalidTextId} class=\"form-control-invalid-text\" aria-hidden={hasInvalidText ? 'false' : 'true'}>\n          <div class=\"icon\">\n            <svg role=\"img\" aria-hidden=\"true\" viewBox=\"0 0 512 512\">\n              <title>Alert Circle</title>\n              <path\n                d=\"M256,48C141.31,48,48,141.31,48,256s93.31,208,208,208,208-93.31,208-208S370.69,48,256,48Zm0,319.91a20,20,0,1,1,20-20A20,20,0,0,1,256,367.91Zm21.72-201.15-5.74,122a16,16,0,0,1-32,0l-5.74-121.94v-.05a21.74,21.74,0,1,1,43.44,0Z\"\n                fill=\"currentColor\"\n              />\n            </svg>\n          </div>\n          <div class=\"text\">\n            <slot name=\"invalid-text\">{props.invalidText}</slot>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FormControl;\n"],"version":3}