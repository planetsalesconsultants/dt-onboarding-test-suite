{"version":3,"sources":["src/functional-components/form-control/form-control.tsx"],"names":["FormControl","props","children","hasLabel","label","hasLabelSlot","hasHelpText","helpText","hasHelpTextSlot","hasInvalidText","invalidText","hasInvalidTextSlot","showHelpText","invalid","showInvalidText","h","class","form-control","[object Object]","size","form-control-has-label","form-control-has-help-text","form-control-has-invalid-text","id","labelId","htmlFor","inputId","aria-hidden","onClick","onLabelClick","name","requiredIndicator","role","viewBox","fill","d","helpTextId","invalidTextId"],"mappings":";;;0CA8CMA,EAAqD,CAACC,EAAOC,KACjE,MAAMC,EAAWF,EAAMG,MAAQ,KAAOH,EAAMI,aAC5C,MAAMC,EAAcL,EAAMM,SAAW,KAAON,EAAMO,gBAClD,MAAMC,EAAiBR,EAAMS,YAAc,KAAOT,EAAMU,mBACxD,MAAMC,EAAeX,EAAMY,QAAU,MAAQ,KAC7C,MAAMC,EAAkBb,EAAMY,QAAU,KAAO,MAE/C,OACEE,EAAA,MAAA,CACEC,MAAO,CACLC,eAAgB,KAChBC,CAAC,gBAAgBjB,EAAMkB,QAAS,KAChCC,yBAA0BjB,EAC1BkB,6BAA8Bf,EAC9BgB,gCAAiCb,IAGnCM,EAAA,QAAA,CACEQ,GAAItB,EAAMuB,QACVR,MAAM,qBACNS,QAASxB,EAAMyB,QAAOC,cACTxB,EAAW,QAAU,OAClCyB,QAAS3B,EAAM4B,cAEfd,EAAA,OAAA,CAAMe,KAAK,SAAS7B,EAAMG,OACzBH,EAAM8B,mBACLhB,EAAA,MAAA,CAAKC,MAAM,YACTD,EAAA,MAAA,CAAKiB,KAAK,MAAKL,cAAa,OAAOM,QAAQ,iBACzClB,EAAA,OAAA,CACEmB,KAAK,eACLC,EAAE,6OAOZpB,EAAA,MAAA,CAAKC,MAAM,sBAAsBd,GAEhCU,GACCG,EAAA,MAAA,CAAKQ,GAAItB,EAAMmC,WAAYpB,MAAM,yBAAwBW,cAAcrB,EAAc,QAAU,QAC7FS,EAAA,OAAA,CAAMe,KAAK,aAAa7B,EAAMM,WAIjCO,GACCC,EAAA,MAAA,CAAKQ,GAAItB,EAAMoC,cAAerB,MAAM,4BAA2BW,cAAclB,EAAiB,QAAU,QACtGM,EAAA,MAAA,CAAKC,MAAM,QACTD,EAAA,MAAA,CAAKiB,KAAK,MAAKL,cAAa,OAAOM,QAAQ,eACzClB,EAAA,QAAA,KAAA,gBACAA,EAAA,OAAA,CACEoB,EAAE,kOACFD,KAAK,mBAIXnB,EAAA,MAAA,CAAKC,MAAM,QACTD,EAAA,OAAA,CAAMe,KAAK,gBAAgB7B,EAAMS","sourcesContent":["import { h, FunctionalComponent } from '@stencil/core';\n\nexport interface FormControlProps {\n  /** The input id, used to map the input to the label */\n  inputId: string;\n\n  /** The size of the form control */\n  size: 'small' | 'medium' | 'large';\n\n  /** The label id, used to map the label to the input */\n  labelId?: string;\n\n  /** The label text (if the label slot isn't used) */\n  label?: string;\n\n  /** Whether or not a label slot has been provided. */\n  hasLabelSlot?: boolean;\n\n  /** The help text id, used to map the input to the help text */\n  helpTextId?: string;\n\n  /** The help text (if the help-text slot isn't used) */\n  helpText?: string;\n\n  /** Whether or not a help text slot has been provided. */\n  hasHelpTextSlot?: boolean;\n\n  /** The invalid text id, used to map the input to the invalid text */\n  invalidTextId?: string;\n\n  /** The invalid text (if the invalid-text slot isn't used) */\n  invalidText?: string;\n\n  /** Whether or not a invalid text slot has been provided. */\n  hasInvalidTextSlot?: boolean;\n\n  /** Whether or not the invalid text should be shown instead of the help text */\n  invalid?: boolean;\n\n  /** Whether or not to display a required indicator should be shown (asterisk) */\n  requiredIndicator?: boolean;\n\n  /** A function that gets called when the label is clicked. */\n  onLabelClick?: (event: MouseEvent) => void;\n}\n\nconst FormControl: FunctionalComponent<FormControlProps> = (props, children) => {\n  const hasLabel = props.label ? true : props.hasLabelSlot;\n  const hasHelpText = props.helpText ? true : props.hasHelpTextSlot;\n  const hasInvalidText = props.invalidText ? true : props.hasInvalidTextSlot;\n  const showHelpText = props.invalid ? false : true;\n  const showInvalidText = props.invalid ? true : false;\n\n  return (\n    <div\n      class={{\n        'form-control': true,\n        [`form-control-${props.size}`]: true,\n        'form-control-has-label': hasLabel,\n        'form-control-has-help-text': hasHelpText,\n        'form-control-has-invalid-text': hasInvalidText,\n      }}\n    >\n      <label\n        id={props.labelId}\n        class=\"form-control-label\"\n        htmlFor={props.inputId}\n        aria-hidden={hasLabel ? 'false' : 'true'}\n        onClick={props.onLabelClick}\n      >\n        <slot name=\"label\">{props.label}</slot>\n        {props.requiredIndicator && (\n          <div class=\"asterisk\">\n            <svg role=\"img\" aria-hidden=\"true\" viewBox=\"0 0 1200 1200\">\n              <path\n                fill=\"currentColor\"\n                d=\"M489.838 29.354v443.603L68.032 335.894 0 545.285l421.829 137.086-260.743 358.876 178.219 129.398L600.048 811.84l260.673 358.806 178.146-129.398-260.766-358.783L1200 545.379l-68.032-209.403-421.899 137.07V29.443H489.84l-.002-.089z\"\n              />\n            </svg>\n          </div>\n        )}\n      </label>\n\n      <div class=\"form-control-input\">{children}</div>\n\n      {showHelpText && (\n        <div id={props.helpTextId} class=\"form-control-help-text\" aria-hidden={hasHelpText ? 'false' : 'true'}>\n          <slot name=\"help-text\">{props.helpText}</slot>\n        </div>\n      )}\n\n      {showInvalidText && (\n        <div id={props.invalidTextId} class=\"form-control-invalid-text\" aria-hidden={hasInvalidText ? 'false' : 'true'}>\n          <div class=\"icon\">\n            <svg role=\"img\" aria-hidden=\"true\" viewBox=\"0 0 512 512\">\n              <title>Alert Circle</title>\n              <path\n                d=\"M256,48C141.31,48,48,141.31,48,256s93.31,208,208,208,208-93.31,208-208S370.69,48,256,48Zm0,319.91a20,20,0,1,1,20-20A20,20,0,0,1,256,367.91Zm21.72-201.15-5.74,122a16,16,0,0,1-32,0l-5.74-121.94v-.05a21.74,21.74,0,1,1,43.44,0Z\"\n                fill=\"currentColor\"\n              />\n            </svg>\n          </div>\n          <div class=\"text\">\n            <slot name=\"invalid-text\">{props.invalidText}</slot>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FormControl;\n"]}