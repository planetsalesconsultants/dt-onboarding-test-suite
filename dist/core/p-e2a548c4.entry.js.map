{"version":3,"sources":["src/components/tab/tab.scss?tag=gr-tab&encapsulation=shadow","src/components/tab/tab.tsx","src/utils/event.ts","src/components/tab-group/tab-group.scss?tag=gr-tab-group&encapsulation=shadow","src/components/tab-group/tab-group.tsx","src/components/tab-panel/tab-panel.scss?tag=gr-tab-panel&encapsulation=shadow","src/components/tab-panel/tab-panel.tsx"],"names":["tabCss","Tab","[object Object]","this","onBlur","bind","onFocus","el","focus","blur","hasFocus","grBlur","emit","grFocus","active","disabled","h","Host","class","tab","tab-active","tab-disabled","tab-focused","role","aria-disabled","aria-selected","tabIndex","slot","name","options","event","CustomEvent","Object","assign","bubbles","cancelable","composed","detail","dispatchEvent","tabGroupCss","TabGroup","tabs","panels","handleClick","handleTabsPanelsChange","resizeObserver","ResizeObserver","preventIndicatorTransition","repositionIndicator","mutationObserver","MutationObserver","mutations","some","m","includes","attributeName","setTimeout","setAriaLabels","routeNavigation","window","addEventListener","tabGroup","shadowRoot","querySelector","nav","observe","attributes","childList","subtree","intersectionObserver","IntersectionObserver","entries","observer","intersectionRatio","setActiveTab","_a","getActiveTab","emitEvents","unobserve","target","disconnect","assignedElements","flatten","filter","tagName","toLowerCase","body","find","closest","scrollBehavior","setFocus","activeTab","previousTab","map","panel","handleIndicatorChange","placement","scrollIntoView","forEach","setAttribute","getAttribute","indicator","style","display","currentTab","width","clientWidth","height","clientHeight","allTabs","precedingTabs","slice","indexOf","offset","reduce","previous","current","left","top","transform","transitionValue","transition","requestAnimationFrame","getTabs","getPanels","tabSize","tab-group","tab-group--top","tab-group--bottom","tab-group--start","tab-group--end","onClick","part","tab-group__tabs","onSlotchange","tabPanelCss","TabPanel","aria-hidden"],"mappings":"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","sourcesContent":[":host {\n  display: inline-block;\n\n  --color: var(--gr-color-dark);\n  --color-focused: var(--gr-color-primary-contrast);\n  --color-disabled: var(--gr-color-medium);\n\n  display: inline-flex;\n  align-items: center;\n  font-family: var(--gr-font-family);\n  font-size: var(--gr-font-size-medium);\n  font-weight: var(--gr-font-weight-normal);\n  color: var(--color);\n  padding: var(--gr-spacing-x-small) var(--gr-spacing-medium);\n  white-space: nowrap;\n  user-select: none;\n  cursor: pointer;\n  transition: 500ms box-shadow, 500ms color;\n}\n\n:host:hover:not(.tab-disabled) {\n  color: var(--color-disabled);\n}\n\n:host(.tab-focused:not(.tab-disabled)) {\n  outline: none;\n}\n\n:host(.tab-active:not(.tab-disabled)) {\n  color: var(--gr-color-primary);\n}\n\n:host(.tab-disabled) {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n","import { Component, Host, h, Prop, Element, Event, EventEmitter, Method, State } from '@stencil/core';\n\n@Component({\n  tag: 'gr-tab',\n  styleUrl: 'tab.scss',\n  shadow: true\n})\nexport class Tab {\n  @Element() el!: HTMLElement;\n\n  @State() hasFocus = false;\n\n  /** The name of the tab panel the tab will control. The panel must be located in the same tab group. */\n  @Prop({ reflect: true }) panel = '';\n\n  @Prop({ reflect: true }) active: boolean = false;\n\n  /** Set to true to draw the tab in a disabled state. */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  /**\n   * Emitted when the button has focus.\n   */\n  @Event({ eventName: 'gr-focus' }) grFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the button loses focus.\n   */\n  @Event({ eventName: 'gr-blur' }) grBlur!: EventEmitter<void>;\n\n  connectedCallback() {\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n  }\n\n  /** Sets focus on the tab. */\n  @Method()\n  async setFocus() {\n    this.el.focus();\n  }\n\n  /** Removes focus from the tab. */\n  @Method()\n  async removeFocus() {\n    this.el.blur();\n  }\n\n  onBlur() {\n    this.hasFocus = false;\n    this.grBlur.emit();\n  }\n\n  onFocus() {\n    this.hasFocus = true;\n    this.grFocus.emit();\n  }\n\n  render() {\n    const { active, disabled } = this;\n\n    return (\n      <Host\n        class={{\n          tab: true,\n          'tab-active': active,\n          'tab-disabled': disabled,\n          'tab-focused': this.hasFocus,\n        }}\n        role=\"tab\"\n        aria-disabled={disabled ? 'true' : 'false'}\n        aria-selected={active ? 'true' : 'false'}\n        tabIndex={disabled || !active ? 0 : null}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        slot=\"nav\"\n      >\n        <slot></slot>\n      </Host>\n    )\n  }\n}\n","//\n// Emits a custom event with more convenient defaults.\n//\nexport function emit(el: HTMLElement, name: string, options?: CustomEventInit) {\n  const event = new CustomEvent(name, {\n    bubbles: true,\n    cancelable: false,\n    composed: true,\n    detail: {},\n    ...options\n  });\n  el.dispatchEvent(event);\n  return event;\n}",":host {\n  --track-color: var(--gr-color-light-shade);\n  --indicator-color: var(--gr-color-primary);\n  --border-track-width: var(--gr-border-width-small);\n  --border-width: var(--gr-border-width-medium);\n  display: block;\n}\n\n.tab-group {\n  display: flex;\n  border: solid 1px transparent;\n  border-radius: 0;\n}\n\n.tab-group .tab-group__tabs {\n  display: flex;\n  position: relative;\n}\n\n.tab-group .tab-group__indicator {\n  position: absolute;\n  left: 0;\n  box-sizing: border-box;\n  transition: 150ms transform ease, 150ms width ease;\n}\n\n.tab-group--has-scroll-controls .tab-group__nav-container {\n  position: relative;\n  padding: 0 var(--gr-spacing-x-large);\n}\n\n/*\n * Top\n */\n.tab-group--top {\n  flex-direction: column;\n}\n\n.tab-group--top .tab-group__nav-container {\n  order: 1;\n}\n\n.tab-group--top .tab-group__nav {\n  display: flex;\n  overflow-x: auto;\n  /* Hide scrollbar in Firefox */\n  scrollbar-width: none;\n}\n\n/* Hide scrollbar in Chrome/Safari */\n.tab-group--top .tab-group__nav::-webkit-scrollbar {\n  width: 0;\n  height: 0;\n}\n\n.tab-group--top .tab-group__tabs {\n  flex: 1 1 auto;\n  position: relative;\n  flex-direction: row;\n  border-bottom: solid var(--border-track-width) var(--track-color);\n}\n\n.tab-group--top .tab-group__indicator {\n  bottom: 0;\n  border-bottom: solid var(--border-width) var(--indicator-color);\n}\n\n.tab-group--top .tab-group__body {\n  order: 2;\n}\n\n.tab-group--top ::slotted(gr-tab-panel) {\n  --padding: var(--gr-spacing-medium) 0;\n}\n/*\n * Bottom\n */\n.tab-group--bottom {\n  flex-direction: column;\n}\n\n.tab-group--bottom .tab-group__nav-container {\n  order: 2;\n}\n\n.tab-group--bottom .tab-group__nav {\n  display: flex;\n  overflow-x: auto;\n  /* Hide scrollbar in Firefox */\n  scrollbar-width: none;\n}\n\n/* Hide scrollbar in Chrome/Safari */\n.tab-group--bottom .tab-group__nav::-webkit-scrollbar {\n  width: 0;\n  height: 0;\n}\n\n.tab-group--bottom .tab-group__tabs {\n  flex: 1 1 auto;\n  position: relative;\n  flex-direction: row;\n  border-top: solid var(--border-track-width) var(--track-color);\n}\n\n.tab-group--bottom .tab-group__indicator {\n  top: 0;\n  border-top: solid var(--border-width) var(--indicator-color);\n}\n\n.tab-group--bottom .tab-group__body {\n  order: 1;\n}\n\n.tab-group--bottom ::slotted(gr-tab-panel) {\n  --padding: var(--gr-spacing-medium) 0;\n}\n\n/*\n * Start\n */\n.tab-group--start {\n  flex-direction: row;\n}\n\n.tab-group--start .tab-group__nav-container {\n  order: 1;\n}\n\n.tab-group--start .tab-group__tabs {\n  flex: 0 0 auto;\n  flex-direction: column;\n  border-right: solid var(--border-track-width) var(--track-color);\n}\n\n.tab-group--start .tab-group__indicator {\n  right: 0;\n  border-right: solid var(--border-width) var(--indicator-color);\n}\n\n.tab-group--start .tab-group__body {\n  flex: 1 1 auto;\n  order: 2;\n}\n.tab-group--start ::slotted(gr-tab-panel) {\n  --padding: 0 var(--gr-spacing-medium);\n}\n/*\n * End\n */\n.tab-group--end {\n  flex-direction: row;\n}\n\n.tab-group--end .tab-group__nav-container {\n  order: 2;\n}\n\n.tab-group--end .tab-group__tabs {\n  flex: 0 0 auto;\n  flex-direction: column;\n  border-left: solid var(--border-track-width) var(--track-color);\n}\n\n.tab-group--end .tab-group__indicator {\n  left: 0;\n  border-left: solid var(--border-width) var(--indicator-color);\n}\n\n.tab-group--end .tab-group__body {\n  flex: 1 1 auto;\n  order: 1;\n}\n\n.tab-group--end ::slotted(gr-tab-panel) {\n  --padding: 0 var(--gr-spacing-medium);\n}\n\n.tab-small slot[name='nav']::slotted(.tab) {\n  padding: var(--gr-spacing-xxx-small) var(--gr-spacing-medium);\n}\n\n.tab-large slot[name='nav']::slotted(.tab) {\n  padding: var(--gr-spacing-medium);\n}\n","import { Component, h, Prop, Watch, Element } from '@stencil/core';\nimport { scrollIntoView } from '../../utils/scroll';\nimport { emit } from '../../utils/event';\n\n@Component({\n  tag: 'gr-tab-group',\n  styleUrl: 'tab-group.scss',\n  shadow: true\n})\nexport class TabGroup {\n  private resizeObserver: ResizeObserver;\n  private mutationObserver: MutationObserver;\n  private tabs: HTMLGrTabElement[] = [];\n  private panels: HTMLGrTabPanelElement[] = [];\n  private activeTab?: HTMLGrTabElement;\n\n  @Element() el: HTMLGrTabGroupElement;\n\n  @Prop() placement: 'top' | 'bottom' | 'start' | 'end' = 'top';\n\n  /**\n  * The tab's size.\n  */\n  @Prop({ reflect: true }) tabSize: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Set to use a popstate eventlistner, to use route navigation.\n   */\n  @Prop({ reflect: true }) routeNavigation = false;\n\n  connectedCallback() {\n    this.handleClick = this.handleClick.bind(this);\n    this.handleTabsPanelsChange = this.handleTabsPanelsChange.bind(this);\n\n    this.resizeObserver = new ResizeObserver(() => {\n      this.preventIndicatorTransition();\n      this.repositionIndicator();\n    });\n\n    this.mutationObserver = new MutationObserver(mutations => {\n      // Update aria labels when the DOM changes\n      if (mutations.some(m => !['aria-labelledby', 'aria-controls'].includes(m.attributeName!))) {\n        setTimeout(() => this.setAriaLabels());\n      }\n    });\n\n\n    if (this.routeNavigation === true) {\n      window.addEventListener('popstate', () => {\n        this.handleTabsPanelsChange();\n      });\n    }\n  }\n\n  componentDidLoad() {\n    const tabGroup: HTMLElement = this.el.shadowRoot.querySelector('.tab-group');\n    const nav = this.el.shadowRoot.querySelector('slot[name=\"nav\"]') as HTMLSlotElement;\n\n    this.handleTabsPanelsChange();\n    this.mutationObserver.observe(this.el, { attributes: true, childList: true, subtree: true });\n    this.resizeObserver.observe(nav);\n\n    // Set initial tab state when the tabs first become visible\n    const intersectionObserver = new IntersectionObserver((entries, observer) => {\n      if (entries[0].intersectionRatio > 0) {\n        this.setAriaLabels();\n        this.setActiveTab(this.getActiveTab() ?? this.tabs[0], { emitEvents: false });\n        observer.unobserve(entries[0].target);\n      }\n    });\n    intersectionObserver.observe(tabGroup);\n  }\n\n  disconnectedCallback() {\n    const nav = this.el.shadowRoot.querySelector('slot[name=\"nav\"]') as HTMLSlotElement;\n\n    this.mutationObserver.disconnect();\n    this.resizeObserver.unobserve(nav);\n  }\n\n  getTabs() {\n    const slot = this.el.shadowRoot.querySelector('slot[name=\"nav\"]') as HTMLSlotElement;\n\n    return [...slot.assignedElements({ flatten: true })].filter(\n      (el: HTMLGrTabElement) => {\n        return el.tagName.toLowerCase() === 'gr-tab'\n      }) as [HTMLGrTabElement];\n  }\n\n  getPanels() {\n    const body: HTMLElement = this.el.shadowRoot?.querySelector('.tab-group__body');\n\n    const slot = body.querySelector('slot') as HTMLSlotElement;\n\n    return [...slot.assignedElements({ flatten: true })].filter(\n      (el: HTMLGrTabElement ) => el.tagName.toLowerCase() === 'gr-tab-panel') as [HTMLGrTabPanelElement];\n  }\n\n  getActiveTab() {\n    return this.tabs.find(el => el.active);\n  }\n\n  handleClick(event: MouseEvent) {\n    const target = event.target as HTMLElement;\n    const tab = target.closest('gr-tab');\n    const tabGroup = tab?.closest('gr-tab-group');\n\n    if (tabGroup !== this.el) {\n      return;\n    }\n\n    if (tab !== null) {\n      this.setActiveTab(tab, { scrollBehavior: 'smooth' });\n    }\n  }\n\n  setActiveTab(tab: HTMLGrTabElement, options?: { emitEvents?: boolean; scrollBehavior?: 'auto' | 'smooth' }) {\n    const nav = this.el.shadowRoot.querySelector('slot[name=\"nav\"]') as HTMLSlotElement;\n\n    options = {\n      emitEvents: true,\n      scrollBehavior: 'auto',\n      ...options\n    };\n\n    tab.setFocus();\n\n    if (tab !== this.activeTab) {\n      const previousTab = this.activeTab;\n      this.activeTab = tab;\n\n      // Sync active tab and panel\n      this.tabs.map(el => (el.active = el === this.activeTab));\n      this.panels.map(el => (el.active = el.name === this.activeTab?.panel));\n      this.handleIndicatorChange();\n\n      if (['top', 'bottom'].includes(this.placement)) {\n        scrollIntoView(this.activeTab, nav, 'horizontal', options.scrollBehavior);\n      }\n\n      // Emit events/\n      if (options.emitEvents) {\n        if (previousTab) {\n          emit(this.el, 'gr-tab-hide', { detail: { name: previousTab.panel } });\n        }\n\n        emit(this.el, 'gr-tab-show', { detail: { name: this.activeTab.panel } });\n      }\n    }\n  }\n\n  setAriaLabels() {\n    // Link each tab with its corresponding panel\n    this.tabs.forEach(tab => {\n      const panel = this.panels.find(el => el.name === tab.panel);\n      if (panel) {\n        tab.setAttribute('aria-controls', panel.getAttribute('id')!);\n        panel.setAttribute('aria-labelledby', tab.getAttribute('id')!);\n      }\n    });\n  }\n\n  @Watch('placement')\n  handleIndicatorChange(): void {\n    const tab = this.getActiveTab();\n    const indicator: HTMLElement = this.el.shadowRoot?.querySelector('.tab-group__indicator');\n\n    if (tab) {\n      indicator.style.display = 'block';\n      this.repositionIndicator();\n    } else {\n      indicator.style.display = 'none';\n    }\n  }\n\n  repositionIndicator() {\n    const currentTab = this.getActiveTab();\n    const indicator: HTMLElement = this.el.shadowRoot?.querySelector('.tab-group__indicator');\n\n    if (!currentTab) {\n      return;\n    }\n\n    const width = currentTab.clientWidth;\n    const height = currentTab.clientHeight;\n    const allTabs = this.tabs;\n    const precedingTabs = allTabs.slice(0, allTabs.indexOf(currentTab));\n    const offset = precedingTabs.reduce(\n      (previous, current) => ({\n        left: previous.left + current.clientWidth,\n        top: previous.top + current.clientHeight\n      }),\n      { left: 0, top: 0 }\n    );\n\n    switch (this.placement) {\n      case 'top':\n      case 'bottom':\n        indicator.style.width = `${width}px`;\n        indicator.style.height = 'auto';\n        indicator.style.transform = `translateX(${offset.left}px)`;\n        break;\n      case 'start':\n      case 'end':\n        indicator.style.width = 'auto';\n        indicator.style.height = `${height}px`;\n        indicator.style.transform = `translateY(${offset.top}px)`;\n        break;\n    }\n  }\n\n  preventIndicatorTransition(): void {\n    const indicator: HTMLElement = this.el.querySelector('.tab-group__indicator');\n    const transitionValue = indicator.style.transition;\n    indicator.style.transition = 'none';\n\n    requestAnimationFrame(() => {\n      indicator.style.transition = transitionValue;\n    });\n  }\n\n  // Store tabs and panels in a cache.\n  handleTabsPanelsChange(): void {\n    this.tabs = this.getTabs();\n    this.panels = this.getPanels();\n    this.handleIndicatorChange();\n  }\n\n  render() {\n    const { placement, tabSize } = this;\n\n    return (\n      <div\n        class={{\n          'tab-group': true,\n          'tab-group--top': placement === 'top',\n          'tab-group--bottom': placement === 'bottom',\n          'tab-group--start': placement === 'start',\n          'tab-group--end': placement === 'end',\n        }}\n        onClick={this.handleClick}\n      >\n        <div class=\"tab-group__nav-container\" part=\"nav\">\n          <div class=\"tab-group__nav\">\n            <div part=\"tabs\" class={{ 'tab-group__tabs': true, [`tab-${tabSize}`]: true, }} role=\"tablist\">\n              <div part=\"active-tab-indicator\" class=\"tab-group__indicator\" />\n\n              <slot name=\"nav\" onSlotchange={this.handleTabsPanelsChange} />\n            </div>\n          </div>\n        </div>\n        <div part=\"body\" class=\"tab-group__body\">\n          <slot onSlotchange={this.handleTabsPanelsChange} />\n        </div>\n      </div>\n    )\n  }\n}\n",":host {\n  --padding: 0;\n  display: block;\n}\n.tab-panel {\n  border: solid 1px transparent;\n  padding: var(--padding);\n}\n","import { Component, h, Element, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'gr-tab-panel',\n  styleUrl: 'tab-panel.scss',\n  shadow: true\n})\nexport class TabPanel {\n  @Element() el: HTMLGrTabPanelElement;\n\n  @Prop({ reflect: true }) name = '';\n\n  @Prop({ reflect: true }) active: boolean = false;\n\n  render() {\n    const { active } = this;\n\n    this.el.style.display = this.active ? 'block' : 'none';\n\n    return (\n      <div part=\"base\" class=\"tab-panel\" role=\"tabpanel\" aria-hidden={active ? 'false' : 'true'}>\n        <slot></slot>\n      </div>\n    )\n  }\n}\n"]}